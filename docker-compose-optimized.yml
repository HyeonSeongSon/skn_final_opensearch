---
name: final-project-optimized

x-opensearch-common-env: &opensearch-common-env
  cluster.name: opensearch-cluster
  discovery.seed_hosts: opensearch-node1,opensearch-node2,opensearch-node3
  cluster.initial_cluster_manager_nodes: opensearch-node1,opensearch-node2,opensearch-node3
  OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
  OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_ADMIN_PASSWORD}
  plugins.security.disabled: true

x-opensearch-healthcheck: &opensearch-healthcheck
  test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
  interval: 10s
  timeout: 5s
  retries: 10

x-opensearch-resources: &opensearch-resources
  deploy:
    resources:
      limits:
        memory: 1g

services:
  opensearch-node1:
    image: opensearchproject/opensearch:3.1.0
    container_name: opensearch-node1
    environment:
      <<: *opensearch-common-env
      node.name: opensearch-node1
    <<: *opensearch-resources
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    healthcheck: *opensearch-healthcheck
    networks:
      - opensearch-net
      
  opensearch-node2:
    image: opensearchproject/opensearch:3.1.0
    container_name: opensearch-node2
    environment:
      <<: *opensearch-common-env
      node.name: opensearch-node2
    <<: *opensearch-resources
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    ports:
      - 9201:9200
      - 9601:9600
    healthcheck: *opensearch-healthcheck
    networks:
      - opensearch-net
      
  opensearch-node3:
    image: opensearchproject/opensearch:3.1.0
    container_name: opensearch-node3
    environment:
      <<: *opensearch-common-env
      node.name: opensearch-node3
    <<: *opensearch-resources
    volumes:
      - opensearch-data3:/usr/share/opensearch/data
    ports:
      - 9202:9200
      - 9602:9600
    healthcheck: *opensearch-healthcheck
    networks:
      - opensearch-net

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:3.1.0
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch-node1:9200","http://opensearch-node2:9200","http://opensearch-node3:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: 'true'
    networks:
      - opensearch-net
    depends_on:
      opensearch-node1:
        condition: service_healthy
        
  fastapi-search:
    image: python:3.11-slim
    container_name: fastapi-search
    working_dir: /app
    # 더 안정적인 시작을 위한 개선된 명령
    command: >
      bash -c "
        echo 'FastAPI 서비스 시작 중...' &&
        pip install --no-cache-dir -r requirements.txt &&
        echo 'FastAPI 애플리케이션 시작...' &&
        python opensearch_api.py
      "
    volumes:
      - .:/app
      - pip-cache:/root/.cache/pip  # pip 캐시 볼륨 추가
    ports:
      - 8010:8000
    environment:
      - OPENSEARCH_HOST=opensearch-node1
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_ADMIN_PASSWORD=${OPENSEARCH_ADMIN_PASSWORD}
      - PYTHONUNBUFFERED=1  # Python 출력 버퍼링 비활성화
    networks:
      - opensearch-net
    # healthcheck 추가
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import requests; requests.get(\"http://localhost:8000/health\")' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 300s  # 5분 대기 시간
    depends_on:
      opensearch-node1:
        condition: service_healthy
    restart: unless-stopped  # 실패 시 자동 재시작

volumes:
  opensearch-data1:
  opensearch-data2:
  opensearch-data3:
  pip-cache:  # pip 캐시 볼륨

networks:
  opensearch-net: 